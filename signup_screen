import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:lojavirtual/helpers/validators.dart';
import 'package:lojavirtual/models/user.dart';
import 'package:lojavirtual/models/user_manager.dart';
import 'package:provider/provider.dart';

class SignUpScreen extends StatelessWidget{

  final GlobalKey <FormState> formkey = GlobalKey <FormState>();
  final GlobalKey <ScaffoldState> scaffoldKey = GlobalKey <ScaffoldState>();

  final User user = User();
  @override
  Widget build(BuildContext context){

    return Scaffold(
      key: scaffoldKey,
      appBar: AppBar(
        title: const Text('Criar Conta'),
      ),
      body: Center(
        child: Card(
          margin: const EdgeInsets.symmetric(horizontal: 16),
          child: Form(
            key: formkey,
            child: ListView(
              padding: const EdgeInsets.all(16),
              shrinkWrap: true,
              children: <Widget>[
                TextFormField(
                  decoration: const InputDecoration(hintText: 'Nome Completo'),
                  validator: (name){
                    if(name.isEmpty)
                      return 'Campo Obrigatório';
                    else if (name.trim().split(' ').length <= 1)
                      return 'Preencha o Nome Completo';
                    return null;
                  },
                  onSaved: (name) => user.name = name,
                ),
                const SizedBox(height: 16,),
                TextFormField(
                  decoration: const InputDecoration(hintText: 'E-mail'),
                  keyboardType: TextInputType.emailAddress,
                  validator: (email){
                    if(email.isEmpty)
                      return 'Campo Obrigatório';
                    else if (!emailValid(email))
                      return 'E-mail inválido';
                    return null;
                  },
                  onSaved: (email) => user.email = email,
                ),
                const SizedBox(height: 16,),
                TextFormField(
                  decoration: const InputDecoration(hintText: 'Senha'),
                  obscureText: true,
                  validator: (pass){
                    if(pass.isEmpty)
                      return 'Campo Obrigatório';
                    else if (pass.length < 6)
                      return 'Senha muito Curta';
                    return null;
                  },
                  onSaved: (pass) => user.password = pass,
                ),
                const SizedBox(height: 16,),
                TextFormField(
                  decoration: const InputDecoration(hintText: 'Repita a Senha'),
                  validator: (pass){
                    if(pass.isEmpty)
                      return 'Campo Obrigatório';
                    else if (pass.length < 6)
                      return 'Senha muito Curta';
                    return null;
                  },
                  onSaved: (pass) => user.passRepeat = pass,
                  obscureText: true,
                ),
                const SizedBox(height: 16,),

                SizedBox(
                  height: 44,
                  child: RaisedButton(
                    color : Theme.of(context).primaryColor,
                    disabledColor: Theme.of(context).primaryColor.withAlpha(100),
                    textColor: Colors.white,
                    onPressed: (){
                      if(formkey.currentState.validate()){
                        formkey.currentState.save();

                        if(user.password != user.passRepeat){
                          scaffoldKey.currentState.showSnackBar(
                              SnackBar(
                                content: const Text(
                                    'Senhas Diferentes:'
                                ),
                                backgroundColor: Colors.red,
                              )
                          );
                          return;
                        }
                        context.read()<UserManager>().signUp(
                          user: user,
                          onSucess:(){
                            debugPrint('sucesso');
                            //TODO: POP

                          },
                          onFail:(e){
                            scaffoldKey.currentState.showSnackBar(
                                SnackBar(
                                  content: Text(
                                      'Falha ao Cadastrar: $e'
                                  ),
                                  backgroundColor: Colors.red,
                                )
                            );
                          }
                        );
                      }
                    },
                    child: const Text('Criar Conta',
                    style: TextStyle(fontSize: 18),
                    ),
                  ),
                )

              ],
            ),
          ),
        ),
      ),
    );
  }
}
